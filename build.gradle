/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'licho' at '16-2-15 8:28pm' with Gradle 2.11
 */

apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'org.akhikhl.gretty'


sourceCompatibility = 1.8
version = '0.0.1-SNAPSHOT'

war.baseName = 'PCCIMS'
project.webAppDirName = 'src/main/webapp'

buildscript {
	repositories {
		jcenter()
	}
	
	dependencies {
		classpath "org.akhikhl.gretty:gretty:+"
	}
}

ext {
	hibernate_version = '4.3.9.Final'
	spring_version = '4.2.3.RELEASE'
}

configurations {
	provided
}

sourceSets {
	main {
		resources.srcDirs = ['src/main/java']
	}
	
	main.compileClasspath += configurations.provided
	test.compileClasspath += configurations.provided
	test.runtimeClasspath += configurations.provided
}

repositories {
	mavenLocal()
	maven {url "http://maven.oschina.net/content/groups/public/"}	
	mavenCentral()
	jcenter()
}

allprojects {
	repositories {
	    mavenLocal()
	    mavenCentral()
	    maven {
	    	url "http://127.0.0.1:8081/nexus/content/repositories/public/"
	    }
	}
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile(
	    "org.hibernate:hibernate-core:${hibernate_version}",
	    "org.hibernate:hibernate-ehcache:${hibernate_version}",
	    "org.springframework:spring-core:${spring_version}",
	    "org.springframework:spring-beans:${spring_version}",
	    "org.springframework:spring-context:${spring_version}",
	    "org.springframework:spring-tx:${spring_version}",
	    "org.springframework:spring-web:${spring_version}",
	    "net.sf.ehcache:ehcache:2.9.0",
	    "mysql:mysql-connector-java:5.1.37",
	    "org.slf4j:slf4j-api:1.7.14",
	    "log4j:log4j:1.2.17",
	    "mysql:mysql-connector-java:5.1.37"
  	)
  	

	providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
	runtime 'javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.2.1'
	
	provided "javax.servlet:javax.servlet-api:4.+"
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

//注意下面这个配置，新版本gradle如果不使用数组添加的话会导致eclipse频繁报错
eclipse.classpath.plusConfigurations += [configurations.provided]
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

task wrapper(type:Wrapper) {
	gradleVersion = '2.11'
	//distributionUrl = 'http://myenterprise.com/gradle/dists'
	distributionPath = 'gradle-dists'
}

// 生成Eclipse支持时，自动生成Deployment Assembly
eclipse.classpath.file.withXml {
    def node = it.asNode();
    for (Node n : node.children()) {
        if ("lib".equals(n.attribute("kind"))) {
            def node_attributes = new Node(n, "attributes");
            def map = new HashMap();
            map.put("name", "org.eclipse.jst.component.dependency");
            map.put("value", "/WEB-INF/lib");
            def node_attribute = new Node(node_attributes, "attribute", map);
        }
    }
}
