apply plugin: 'announce'

test {
//	systemProperty 'items', '20'	//添加系统参数
    jvmArgs '-Xms128m', '-Xmx256m', '-XX:MaxPermSize=128m'

    testLogging {
        showStandardStreams = true  //显示标准输出
        exceptionFormat 'full'		//异常信息全部输出
        events 'started', 'passed', 'skipped', 'failed'	//输出指定阶段的事件
    }
    forkEvery = 2				//每个fork进程中测试类的最大个数
    maxParallelForks = determineMaxParallelForks()		// fork进程的最大数
}

def determineMaxParallelForks() {
    (Runtime.runtime.availableProcessors() / 2) < 1 ? 1 : Runtime.runtime.availableProcessors() / 2
}

//test.addTestListener(new NotificationTestListener(project))	//添加监听，也可以用另一种方式

class NotificationTestListener implements TestListener {
    final Project project

    NotificationTestListener(Project project) {
        this.project = project
    }

    @Override
    void afterSuite(TestDescriptor suite, TestResult result) {
        if (!suite.parent && result.getTestCount() > 0) {
            long elapsedTestTime = result.getEndTime() - result.getStartTime()
            project.announce.announce("Elapsed time for execution of ${result.getTestCount()} test(s): $elapsedTestTime ms", 'local')
        }
    }

    @Override
    void afterTest(TestDescriptor testDescriptor, TestResult result) {}

    @Override
    void beforeSuite(TestDescriptor suite) {}

    @Override
    void beforeTest(TestDescriptor testDescriptor) {}
}